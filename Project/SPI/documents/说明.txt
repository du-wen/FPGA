1.数据从rom中来，通过spi加载到dac。
2.首先八位是控制位：最高位第七位是读写控制选择，五六位是传输字节数（00是一位，01是两位，10是三位，11是四位），四到零是地址位。
3.sclk上升沿跟我们的数据是中心对其，使得我们的建立时间跟保持时间最优。
4.我们需要配置32个的寄存器数据，如何判断我们的数据全部写进寄存器了，也就是data_end信号如何确定。根据地址来确定。
5.用quartus建一个mif文件，用于存储配置寄存器的数据，存储在ram中。file-new-memory initialization files。也可以用matlab产生
6.我们在产生单口ram的时候要把mif文件添加进去，初始化进去，并且把mif文件加入sim文件夹下，这样才能够在仿真的时候成功读取mif文件。
7.仿真结果显示产生的spi_clk与sdi几乎是中心对其，这就会使得我们在接收端获得的数据更好。（建立时间跟保持时间余量最大）
8.写一个数据回收的task（名字为rec_spi()），验证我们发出去的数据是不是对的，写接收的时序（就是编写模型文件）
9.新建dac_ini_16_32.mif文件，保存在sim文件夹下，该mif文件与quartus产生的不一样，它仅保存32个数据，我们用于tb_spi中send_mem这个存储器的初始化。